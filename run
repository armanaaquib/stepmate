#!/bin/bash

__local_install_git_hooks() {
  if ! type pre-commit >/dev/null; then
    echo "Downloading pre-commit..."
    brew install pre-commit
    echo "...Finish downloading"
  fi

  pre-commit install -f

  echo "Installed git hooks"
}

_create_user_and_database() {
  psql -U $(whoami) -d postgres -c "SELECT rolname FROM pg_roles WHERE rolname='step';" | grep -w 'step' ||
    psql -U $(whoami) -d postgres -c "CREATE USER step WITH encrypted password 'step';"

  psql -U $(whoami) -d postgres -c "SELECT rolsuper FROM pg_roles WHERE rolname='step';" | grep -w 't' ||
    psql -U $(whoami) -d postgres -c "ALTER USER step WITH SUPERUSER;"

  psql -l | grep -w stepmate ||
    psql -U $(whoami) -d postgres -c 'CREATE DATABASE stepmate OWNER step;'
}

_setup_database_local() {
  checkPSQL=$(psql --version)

  if [[ ! $? || ${checkPSQL} != *"13"* ]]; then
    brew install postgresql@13
    brew link --overwrite --force postgresql@13
  fi

  brew services start postgresql@13

  if [[ $(brew services list | grep "postgresql") != *"started"* ]]; then
    sleep 20
  fi

  _create_user_and_database
}

_export_local_db_properties() {
  export DB_PORT=5432
  export DB_HOST=localhost
  export DB_USER=step
  export DB_PASSWORD=step
  export DB_NAME=stepmate
}

__backend_standalone() {
  _setup_database_local

  _export_local_db_properties
  ./gradlew clean bootRun
}

__backend_test() {
  ./gradlew cleanTest test
}

__frontend_standalone() {
  yarn --cwd=./frontend install && yarn --cwd=./frontend start
}

__frontend_test() {
  yarn --cwd=./frontend install && yarn --cwd=./frontend test
}

__service() {
  yarn --cwd=./frontend install && yarn --cwd=./frontend build

  cp -R ./frontend/build/* ./src/main/resources/static

  __backend_standalone
}

__build_docker_image() {
  docker build -t stepmate .
}

__container_in_local() {
  docker run \
    --name stepmate-postgres \
    --publish 8001:5432 \
    -e POSTGRES_USER=step \
    -e POSTGRES_PASSWORD=step \
    -e POSTGRES_DB=stepmate \
    --detach \
    postgres

  __build_docker_image
  docker run \
    --publish 8000:8000 \
    -e DB_HOST=host.docker.internal \
    -e DB_PORT=8001 \
    -e DB_NAME=stepmate \
    -e DB_USER=step \
    -e DB_PASSWORD=step \
    stepmate
}

CMD=${1:-}
__"$CMD"
